<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Feedback extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Feedback_model');
    } 

    /*
     * Listing of feedbacks
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('feedback/index?');
        $config['total_rows'] = $this->Feedback_model->get_all_feedbacks_count();
        $this->pagination->initialize($config);

        $data['feedbacks'] = $this->Feedback_model->get_all_feedbacks($params);
        
        $data['_view'] = 'feedback/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new feedback
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('tutorialNo','TutorialNo','integer');
		$this->form_validation->set_rules('feedback','Feedback','max_length[1000]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'tutorID' => $this->input->post('tutorID'),
				'tutorialNo' => $this->input->post('tutorialNo'),
				'feedback' => $this->input->post('feedback'),
            );
            
            $feedback_id = $this->Feedback_model->add_feedback($params);
            redirect('feedback/index');
        }
        else
        {
			$this->load->model('Tutor_model');
			$data['all_tutors'] = $this->Tutor_model->get_all_tutors();
            
            $data['_view'] = 'feedback/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a feedback
     */
    function edit($feedbackID)
    {   
        // check if the feedback exists before trying to edit it
        $data['feedback'] = $this->Feedback_model->get_feedback($feedbackID);
        
        if(isset($data['feedback']['feedbackID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('tutorialNo','TutorialNo','integer');
			$this->form_validation->set_rules('feedback','Feedback','max_length[1000]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'tutorID' => $this->input->post('tutorID'),
					'tutorialNo' => $this->input->post('tutorialNo'),
					'feedback' => $this->input->post('feedback'),
                );

                $this->Feedback_model->update_feedback($feedbackID,$params);            
                redirect('feedback/index');
            }
            else
            {
				$this->load->model('Tutor_model');
				$data['all_tutors'] = $this->Tutor_model->get_all_tutors();

                $data['_view'] = 'feedback/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The feedback you are trying to edit does not exist.');
    } 

    /*
     * Deleting feedback
     */
    function remove($feedbackID)
    {
        $feedback = $this->Feedback_model->get_feedback($feedbackID);

        // check if the feedback exists before trying to delete it
        if(isset($feedback['feedbackID']))
        {
            $this->Feedback_model->delete_feedback($feedbackID);
            redirect('feedback/index');
        }
        else
            show_error('The feedback you are trying to delete does not exist.');
    }
    
}
