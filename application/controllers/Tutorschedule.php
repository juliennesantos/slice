<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tutorschedule extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tutorschedule_model');
    } 

    /*
     * Listing of tutorschedules
     */
    function index()
    {
        $this->load->library('loginvalidation');
        $this->loginvalidation->isValid();
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tutorschedule/index?');
        $config['total_rows'] = $this->Tutorschedule_model->get_all_tutorschedules_count();
        $this->pagination->initialize($config);

        $data['tutorschedules'] = $this->Tutorschedule_model->get_all_tutorschedules($params);
        
        $data['_view'] = 'tutorschedule/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tutorschedule
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('term','Term','integer');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'tutorID' => $this->input->post('tutorID'),
				'scheduleID' => $this->input->post('scheduleID'),
				'term' => $this->input->post('term'),
				'schoolYear' => $this->input->post('schoolYear'),
            );
            
            $tutorschedule_id = $this->Tutorschedule_model->add_tutorschedule($params);
            redirect('tutorschedule/index');
        }
        else
        {
			$this->load->model('Tutor_model');
			$data['all_tutors'] = $this->Tutor_model->get_all_tutors();

			$this->load->model('Schedule_model');
			$data['all_schedule'] = $this->Schedule_model->get_all_schedule();
            
            $data['_view'] = 'tutorschedule/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tutorschedule
     */
    function edit($tutorScheduleID)
    {   
        // check if the tutorschedule exists before trying to edit it
        $data['tutorschedule'] = $this->Tutorschedule_model->get_tutorschedule($tutorScheduleID);
        
        if(isset($data['tutorschedule']['tutorScheduleID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('term','Term','integer');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'tutorID' => $this->input->post('tutorID'),
					'scheduleID' => $this->input->post('scheduleID'),
					'term' => $this->input->post('term'),
					'schoolYear' => $this->input->post('schoolYear'),
                );

                $this->Tutorschedule_model->update_tutorschedule($tutorScheduleID,$params);            
                redirect('tutorschedule/index');
            }
            else
            {
				$this->load->model('Tutor_model');
				$data['all_tutors'] = $this->Tutor_model->get_all_tutors();

				$this->load->model('Schedule_model');
				$data['all_schedule'] = $this->Schedule_model->get_all_schedule();

                $data['_view'] = 'tutorschedule/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tutorschedule you are trying to edit does not exist.');
    } 

    /*
     * Deleting tutorschedule
     */
    function remove($tutorScheduleID)
    {
        $tutorschedule = $this->Tutorschedule_model->get_tutorschedule($tutorScheduleID);

        // check if the tutorschedule exists before trying to delete it
        if(isset($tutorschedule['tutorScheduleID']))
        {
            $this->Tutorschedule_model->delete_tutorschedule($tutorScheduleID);
            redirect('tutorschedule/index');
        }
        else
            show_error('The tutorschedule you are trying to delete does not exist.');
    }
    
}
